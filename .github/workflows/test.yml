name: build

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - '*.md'
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - '*.md'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        target:
          - os: linux
            cpu: amd64
          # - os: linux
          #   cpu: i386
          - os: macos
            cpu: amd64
          - os: windows
            cpu: amd64
        nim: ['1.2.0', '1.4.8', '1.6.0']
        include:
          - target:
              os: linux
            builder: ubuntu-18.04
          - target:
              os: macos
            builder: macos-10.15
          - target:
              os: windows
            builder: windows-2019
        exclude:
          - os: windows
            nim: '1.2.0'

    name: '${{ matrix.target.os }}-${{ matrix.target.cpu }}-${{ matrix.nim }}'
    runs-on: ${{ matrix.builder }}
    steps:
      - name: Get branch name
        shell: bash
        run: |
          if [[ '${{  github.event_name }}' == 'pull_request' ]]; then
            echo "##[set-output name=branch_name;]$(echo ${GITHUB_HEAD_REF})"
            echo "Branch found (PR): ${GITHUB_HEAD_REF}"
          else
            echo "##[set-output name=branch_name;]$(echo ${GITHUB_REF#refs/heads/})"
            echo "Branch found (not PR): ${GITHUB_REF#refs/heads/}"
          fi
        id: get_branch

      - name: Cancel Previous Runs (except main/devel)
        if: >
          steps.get_branch.outputs.branch_name != 'main' &&
          steps.get_branch.outputs.branch_name != 'develop'
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout project
        uses: actions/checkout@v2
        with:
          path: ./
          submodules: false

      - name: Restore choosenim
        id: choosenim-cache
        uses: actions/cache@v2
        with:
          path: ~/.choosenim
          key: ${{ matrix.target.os }}-choosenim-${{ matrix.nim }}

      - name: Setup nim environment 
        uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: ${{ matrix.nim }}

      # TODO: if later on we need to change nimble version we need to change the key.
      - name: Restore nimble v0.14.0 cache
        id: nimble-cache
        uses: actions/cache@v2
        with:
          path: ~/.nimble/pkgs/nimble-#0a23c44c
          key: ${{ matrix.target.os }}-${{ matrix.nim }}-nimble-v0.14.0
    
      - name: Switch nimble to v0.14.0 (mac & linux)
        if: runner.os != 'Windows' 
        # steps.nimble-cache.outputs.cache-hit != 'true'  
        shell: bash
        run: |
          choosenim 1.6.0 -y
          nimble install https://github.com/nim-lang/nimble@#0a23c44c -y
          echo N | choosenim ${{ matrix.nim }} 
          echo "$HOME/.nimble/pkgs/nimble-#0a23c44c/" >> $GITHUB_PATH

      - name: Check nim and nimble version
        shell: bash
        run: |
          which nimble
          nim -v
          nimble -v 
      
      # TODO: use local deps mode and cache it.
      # Workaround #1: nimble sync broke on Windows (checksum mismatch issue)
      # Stick with old version nimble for now.
      - name: Sync dependencies (mac & linux)
        if: runner.os != 'Windows'
        shell: bash 
        run: echo y | nimble -l sync 

      - name: Run test cases
        shell: bash
        run: echo y | nimble -l test

      - name: Run build if binary file needed
        shell: bash
        run: echo y | nimble -l build
