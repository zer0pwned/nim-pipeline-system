name: build

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - '*.md'
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - '*.md'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        target:
          - os: linux
            cpu: amd64
          # - os: linux
          #   cpu: i386
          - os: macos
            cpu: amd64
          - os: windows
            cpu: amd64
        nim: ['1.2.0', '1.4.8', '1.6.0']
        include:
          - target:
              os: linux
            builder: ubuntu-18.04
          - target:
              os: macos
            builder: macos-10.15
          - target:
              os: windows
            builder: windows-2019

      name: '${{ matrix.target.os }}-${{ matrix.target.cpu }}-${{ matrix.nim }}'
      runs-on: ${{ matrix.builder }}

      steps:

        - name: Get branch name
        shell: bash
        run: |
          if [[ '${{  github.event_name }}' == 'pull_request' ]]; then
            echo "##[set-output name=branch_name;]$(echo ${GITHUB_HEAD_REF})"
            echo "Branch found (PR): ${GITHUB_HEAD_REF}"
          else
            echo "##[set-output name=branch_name;]$(echo ${GITHUB_REF#refs/heads/})"
            echo "Branch found (not PR): ${GITHUB_REF#refs/heads/}"
          fi
        id: get_branch

        - name: Cancel Previous Runs (except main/devel)
        if: >
          steps.get_branch.outputs.branch_name != 'main' &&
          steps.get_branch.outputs.branch_name != 'develop'
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

        - name: Checkout project
          uses: actions/checkout@v2
          with:
            path: example-project
            submodules: false

        - name: Setup nim environment
          uses: jiro4989/setup-nim-action@v1
          with:
            nim-version: ${{ matrix.nim }}

        - name: Restore nimble v0.14.0 cache
          id: nimble-cache
          uses: actions/cache@v2
          with:
            path: ~/.nimble/pkgs/nimble-#0a23c44c
            key: ${{ runner.os }}-nimble-v0.14.0

        - name: Setup nimble to v0.14.0 (cache missed)
          if: steps.nimble-cache.outputs.cache-hit != 'true'
          shell: bash
          run: |
            choosenim 1.6.0 -y
            nimble install https://github.com/nim-lang/nimble@#0a23c44c -y
      
        - name: Switch back nim version & alias nimble  
          shell: bash
          runs: |
            choosenim ${{ matrix.nim }} -y
            alias nimble=~/.nimble/pkgs/nimble-#0a23c44c/nimble
            nim -v
            nimble -v 
        
        # TODO: use local deps mode and cache it.

        - name: Sync dependencies
          runs: nimble sync 

        - name: Run test cases
          runs: nimble test

        - name: Run build if binary file needed
          runs: nimble build
